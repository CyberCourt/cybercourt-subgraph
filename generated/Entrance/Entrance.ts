// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class addContractEvent extends ethereum.Event {
  get params(): addContractEvent__Params {
    return new addContractEvent__Params(this);
  }
}

export class addContractEvent__Params {
  _event: addContractEvent;

  constructor(event: addContractEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get contractOrder(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get contentOrIpfsHash(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class addStakeEvent extends ethereum.Event {
  get params(): addStakeEvent__Params {
    return new addStakeEvent__Params(this);
  }
}

export class addStakeEvent__Params {
  _event: addStakeEvent;

  constructor(event: addStakeEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get stakeBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class applyExitEvent extends ethereum.Event {
  get params(): applyExitEvent__Params {
    return new applyExitEvent__Params(this);
  }
}

export class applyExitEvent__Params {
  _event: applyExitEvent;

  constructor(event: applyExitEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class applyJudgeEvent extends ethereum.Event {
  get params(): applyJudgeEvent__Params {
    return new applyJudgeEvent__Params(this);
  }
}

export class applyJudgeEvent__Params {
  _event: applyJudgeEvent;

  constructor(event: applyJudgeEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get judgerAddr(): Array<Address> {
    return this._event.parameters[3].value.toAddressArray();
  }
}

export class createKindleEvent extends ethereum.Event {
  get params(): createKindleEvent__Params {
    return new createKindleEvent__Params(this);
  }
}

export class createKindleEvent__Params {
  _event: createKindleEvent;

  constructor(event: createKindleEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get governAddr(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class createMainContractEvent extends ethereum.Event {
  get params(): createMainContractEvent__Params {
    return new createMainContractEvent__Params(this);
  }
}

export class createMainContractEvent__Params {
  _event: createMainContractEvent;

  constructor(event: createMainContractEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractAddr(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get contentOrIpfsHash(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class exitStakeEvent extends ethereum.Event {
  get params(): exitStakeEvent__Params {
    return new exitStakeEvent__Params(this);
  }
}

export class exitStakeEvent__Params {
  _event: exitStakeEvent;

  constructor(event: exitStakeEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get stakeBalance(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class finishConProposalEvent extends ethereum.Event {
  get params(): finishConProposalEvent__Params {
    return new finishConProposalEvent__Params(this);
  }
}

export class finishConProposalEvent__Params {
  _event: finishConProposalEvent;

  constructor(event: finishConProposalEvent) {
    this._event = event;
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class finishContractSignEvent extends ethereum.Event {
  get params(): finishContractSignEvent__Params {
    return new finishContractSignEvent__Params(this);
  }
}

export class finishContractSignEvent__Params {
  _event: finishContractSignEvent;

  constructor(event: finishContractSignEvent) {
    this._event = event;
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get contractOrder(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class finishExitEvent extends ethereum.Event {
  get params(): finishExitEvent__Params {
    return new finishExitEvent__Params(this);
  }
}

export class finishExitEvent__Params {
  _event: finishExitEvent;

  constructor(event: finishExitEvent) {
    this._event = event;
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class finishJudgerProposalEvent extends ethereum.Event {
  get params(): finishJudgerProposalEvent__Params {
    return new finishJudgerProposalEvent__Params(this);
  }
}

export class finishJudgerProposalEvent__Params {
  _event: finishJudgerProposalEvent;

  constructor(event: finishJudgerProposalEvent) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class launchJudgerProposalEvent extends ethereum.Event {
  get params(): launchJudgerProposalEvent__Params {
    return new launchJudgerProposalEvent__Params(this);
  }
}

export class launchJudgerProposalEvent__Params {
  _event: launchJudgerProposalEvent;

  constructor(event: launchJudgerProposalEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class launchProposalEvent extends ethereum.Event {
  get params(): launchProposalEvent__Params {
    return new launchProposalEvent__Params(this);
  }
}

export class launchProposalEvent__Params {
  _event: launchProposalEvent;

  constructor(event: launchProposalEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class setTokenFaucetEvent extends ethereum.Event {
  get params(): setTokenFaucetEvent__Params {
    return new setTokenFaucetEvent__Params(this);
  }
}

export class setTokenFaucetEvent__Params {
  _event: setTokenFaucetEvent;

  constructor(event: setTokenFaucetEvent) {
    this._event = event;
  }

  get token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenFaucet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class signContractEvent extends ethereum.Event {
  get params(): signContractEvent__Params {
    return new signContractEvent__Params(this);
  }
}

export class signContractEvent__Params {
  _event: signContractEvent;

  constructor(event: signContractEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get contractOrder(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get signStatus(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class signJudgerProposalEvent extends ethereum.Event {
  get params(): signJudgerProposalEvent__Params {
    return new signJudgerProposalEvent__Params(this);
  }
}

export class signJudgerProposalEvent__Params {
  _event: signJudgerProposalEvent;

  constructor(event: signJudgerProposalEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get signStatus(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class signProposalEvent extends ethereum.Event {
  get params(): signProposalEvent__Params {
    return new signProposalEvent__Params(this);
  }
}

export class signProposalEvent__Params {
  _event: signProposalEvent;

  constructor(event: signProposalEvent) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get judgerOrgAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get signStatus(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Entrance extends ethereum.SmartContract {
  static bind(address: Address): Entrance {
    return new Entrance("Entrance", address);
  }

  controlledTokenMap(param0: Address): Address {
    let result = super.call(
      "controlledTokenMap",
      "controlledTokenMap(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_controlledTokenMap(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "controlledTokenMap",
      "controlledTokenMap(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  controlledTokenProxyFactory(): Address {
    let result = super.call(
      "controlledTokenProxyFactory",
      "controlledTokenProxyFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_controlledTokenProxyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "controlledTokenProxyFactory",
      "controlledTokenProxyFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  governorAlphaProxyFactory(): Address {
    let result = super.call(
      "governorAlphaProxyFactory",
      "governorAlphaProxyFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_governorAlphaProxyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "governorAlphaProxyFactory",
      "governorAlphaProxyFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  judgerOrgMap(param0: Address): boolean {
    let result = super.call("judgerOrgMap", "judgerOrgMap(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_judgerOrgMap(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("judgerOrgMap", "judgerOrgMap(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  judgerOrgProxyFactory(): Address {
    let result = super.call(
      "judgerOrgProxyFactory",
      "judgerOrgProxyFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_judgerOrgProxyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "judgerOrgProxyFactory",
      "judgerOrgProxyFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mainContractMap(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "mainContractMap",
      "mainContractMap(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_mainContractMap(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mainContractMap",
      "mainContractMap(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  mainContractProxyFactory(): Address {
    let result = super.call(
      "mainContractProxyFactory",
      "mainContractProxyFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_mainContractProxyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "mainContractProxyFactory",
      "mainContractProxyFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reserve(): Address {
    let result = super.call("reserve", "reserve():(address)", []);

    return result[0].toAddress();
  }

  try_reserve(): ethereum.CallResult<Address> {
    let result = super.tryCall("reserve", "reserve():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  timelockProxyFactory(): Address {
    let result = super.call(
      "timelockProxyFactory",
      "timelockProxyFactory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_timelockProxyFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "timelockProxyFactory",
      "timelockProxyFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenFaucetMap(param0: Address): Address {
    let result = super.call(
      "tokenFaucetMap",
      "tokenFaucetMap(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_tokenFaucetMap(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenFaucetMap",
      "tokenFaucetMap(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createKindle(): Address {
    let result = super.call("createKindle", "createKindle():(address)", []);

    return result[0].toAddress();
  }

  try_createKindle(): ethereum.CallResult<Address> {
    let result = super.tryCall("createKindle", "createKindle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get reserve_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get governorAlphaProxyFactory_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get judgerOrgProxyFactory_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get mainContractProxyFactory_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get timelockProxyFactory_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get controlledTokenProxyFactory_(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class CreateMainContractCall extends ethereum.Call {
  get inputs(): CreateMainContractCall__Inputs {
    return new CreateMainContractCall__Inputs(this);
  }

  get outputs(): CreateMainContractCall__Outputs {
    return new CreateMainContractCall__Outputs(this);
  }
}

export class CreateMainContractCall__Inputs {
  _call: CreateMainContractCall;

  constructor(call: CreateMainContractCall) {
    this._call = call;
  }

  get persons(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get contentOrIpfsHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get stakeBalance(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class CreateMainContractCall__Outputs {
  _call: CreateMainContractCall;

  constructor(call: CreateMainContractCall) {
    this._call = call;
  }
}

export class SetTokenFaucetCall extends ethereum.Call {
  get inputs(): SetTokenFaucetCall__Inputs {
    return new SetTokenFaucetCall__Inputs(this);
  }

  get outputs(): SetTokenFaucetCall__Outputs {
    return new SetTokenFaucetCall__Outputs(this);
  }
}

export class SetTokenFaucetCall__Inputs {
  _call: SetTokenFaucetCall;

  constructor(call: SetTokenFaucetCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenFaucet(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetTokenFaucetCall__Outputs {
  _call: SetTokenFaucetCall;

  constructor(call: SetTokenFaucetCall) {
    this._call = call;
  }
}

export class BeforeTokenTransferCall extends ethereum.Call {
  get inputs(): BeforeTokenTransferCall__Inputs {
    return new BeforeTokenTransferCall__Inputs(this);
  }

  get outputs(): BeforeTokenTransferCall__Outputs {
    return new BeforeTokenTransferCall__Outputs(this);
  }
}

export class BeforeTokenTransferCall__Inputs {
  _call: BeforeTokenTransferCall;

  constructor(call: BeforeTokenTransferCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class BeforeTokenTransferCall__Outputs {
  _call: BeforeTokenTransferCall;

  constructor(call: BeforeTokenTransferCall) {
    this._call = call;
  }
}

export class AddContractCall extends ethereum.Call {
  get inputs(): AddContractCall__Inputs {
    return new AddContractCall__Inputs(this);
  }

  get outputs(): AddContractCall__Outputs {
    return new AddContractCall__Outputs(this);
  }
}

export class AddContractCall__Inputs {
  _call: AddContractCall;

  constructor(call: AddContractCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get contentOrIpfsHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get stakeBalance(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddContractCall__Outputs {
  _call: AddContractCall;

  constructor(call: AddContractCall) {
    this._call = call;
  }
}

export class AddStakeBalanceCall extends ethereum.Call {
  get inputs(): AddStakeBalanceCall__Inputs {
    return new AddStakeBalanceCall__Inputs(this);
  }

  get outputs(): AddStakeBalanceCall__Outputs {
    return new AddStakeBalanceCall__Outputs(this);
  }
}

export class AddStakeBalanceCall__Inputs {
  _call: AddStakeBalanceCall;

  constructor(call: AddStakeBalanceCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get stakeBalance(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddStakeBalanceCall__Outputs {
  _call: AddStakeBalanceCall;

  constructor(call: AddStakeBalanceCall) {
    this._call = call;
  }
}

export class ApplyExitCall extends ethereum.Call {
  get inputs(): ApplyExitCall__Inputs {
    return new ApplyExitCall__Inputs(this);
  }

  get outputs(): ApplyExitCall__Outputs {
    return new ApplyExitCall__Outputs(this);
  }
}

export class ApplyExitCall__Inputs {
  _call: ApplyExitCall;

  constructor(call: ApplyExitCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApplyExitCall__Outputs {
  _call: ApplyExitCall;

  constructor(call: ApplyExitCall) {
    this._call = call;
  }
}

export class ExitStakeBalanceCall extends ethereum.Call {
  get inputs(): ExitStakeBalanceCall__Inputs {
    return new ExitStakeBalanceCall__Inputs(this);
  }

  get outputs(): ExitStakeBalanceCall__Outputs {
    return new ExitStakeBalanceCall__Outputs(this);
  }
}

export class ExitStakeBalanceCall__Inputs {
  _call: ExitStakeBalanceCall;

  constructor(call: ExitStakeBalanceCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get stakeBalance(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ExitStakeBalanceCall__Outputs {
  _call: ExitStakeBalanceCall;

  constructor(call: ExitStakeBalanceCall) {
    this._call = call;
  }
}

export class SignContractCall extends ethereum.Call {
  get inputs(): SignContractCall__Inputs {
    return new SignContractCall__Inputs(this);
  }

  get outputs(): SignContractCall__Outputs {
    return new SignContractCall__Outputs(this);
  }
}

export class SignContractCall__Inputs {
  _call: SignContractCall;

  constructor(call: SignContractCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get contractOrder(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get signStatus(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get stakeBalance(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SignContractCall__Outputs {
  _call: SignContractCall;

  constructor(call: SignContractCall) {
    this._call = call;
  }
}

export class CreateKindleCall extends ethereum.Call {
  get inputs(): CreateKindleCall__Inputs {
    return new CreateKindleCall__Inputs(this);
  }

  get outputs(): CreateKindleCall__Outputs {
    return new CreateKindleCall__Outputs(this);
  }
}

export class CreateKindleCall__Inputs {
  _call: CreateKindleCall;

  constructor(call: CreateKindleCall) {
    this._call = call;
  }
}

export class CreateKindleCall__Outputs {
  _call: CreateKindleCall;

  constructor(call: CreateKindleCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class LaunchProposalCall extends ethereum.Call {
  get inputs(): LaunchProposalCall__Inputs {
    return new LaunchProposalCall__Inputs(this);
  }

  get outputs(): LaunchProposalCall__Outputs {
    return new LaunchProposalCall__Outputs(this);
  }
}

export class LaunchProposalCall__Inputs {
  _call: LaunchProposalCall;

  constructor(call: LaunchProposalCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get persons(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get balances(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class LaunchProposalCall__Outputs {
  _call: LaunchProposalCall;

  constructor(call: LaunchProposalCall) {
    this._call = call;
  }
}

export class SignProposalCall extends ethereum.Call {
  get inputs(): SignProposalCall__Inputs {
    return new SignProposalCall__Inputs(this);
  }

  get outputs(): SignProposalCall__Outputs {
    return new SignProposalCall__Outputs(this);
  }
}

export class SignProposalCall__Inputs {
  _call: SignProposalCall;

  constructor(call: SignProposalCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get signStatus(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class SignProposalCall__Outputs {
  _call: SignProposalCall;

  constructor(call: SignProposalCall) {
    this._call = call;
  }
}

export class LaunchJudgerProposalCall extends ethereum.Call {
  get inputs(): LaunchJudgerProposalCall__Inputs {
    return new LaunchJudgerProposalCall__Inputs(this);
  }

  get outputs(): LaunchJudgerProposalCall__Outputs {
    return new LaunchJudgerProposalCall__Outputs(this);
  }
}

export class LaunchJudgerProposalCall__Inputs {
  _call: LaunchJudgerProposalCall;

  constructor(call: LaunchJudgerProposalCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get persons(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get balance(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class LaunchJudgerProposalCall__Outputs {
  _call: LaunchJudgerProposalCall;

  constructor(call: LaunchJudgerProposalCall) {
    this._call = call;
  }
}

export class SignJudgerProposalCall extends ethereum.Call {
  get inputs(): SignJudgerProposalCall__Inputs {
    return new SignJudgerProposalCall__Inputs(this);
  }

  get outputs(): SignJudgerProposalCall__Outputs {
    return new SignJudgerProposalCall__Outputs(this);
  }
}

export class SignJudgerProposalCall__Inputs {
  _call: SignJudgerProposalCall;

  constructor(call: SignJudgerProposalCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proposalOrder(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get signStatus(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class SignJudgerProposalCall__Outputs {
  _call: SignJudgerProposalCall;

  constructor(call: SignJudgerProposalCall) {
    this._call = call;
  }
}

export class ApplyJudgeCall extends ethereum.Call {
  get inputs(): ApplyJudgeCall__Inputs {
    return new ApplyJudgeCall__Inputs(this);
  }

  get outputs(): ApplyJudgeCall__Outputs {
    return new ApplyJudgeCall__Outputs(this);
  }
}

export class ApplyJudgeCall__Inputs {
  _call: ApplyJudgeCall;

  constructor(call: ApplyJudgeCall) {
    this._call = call;
  }

  get judgerOrgAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get mainContractOrder(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApplyJudgeCall__Outputs {
  _call: ApplyJudgeCall;

  constructor(call: ApplyJudgeCall) {
    this._call = call;
  }
}
